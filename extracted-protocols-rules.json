{
  "protocols_discovered": [
    {
      "path": "/home/haymayndz/ai-driven-template/.cursor/ai-driven-workflow/0-bootstrap-your-project.md",
      "lines_matched": {
        "headers": ["# PROTOCOL 0: PROJECT BOOTSTRAP & CONTEXT ENGINEERING", "## 1. AI ROLE AND MISSION", "## 2. THE BOOTSTRAP PROCESS", "### STEP 1: Tooling Configuration & Rule Activation", "### STEP 2: Initial Codebase Mapping", "### STEP 3: Thematic Investigation Plan", "### STEP 4: Autonomous Deep Dive & Synthesis", "### STEP 5: Collaborative Validation (The \"Checkpoint\")", "### STEP 6: Iterative Generation Phase 1: Documentation (READMEs)", "### STEP 7: Iterative Generation Phase 2: Project Rules", "### FINALIZATION"],
        "ids": [],
        "titles": []
      },
      "raw_preview": "# PROTOCOL 0: PROJECT BOOTSTRAP & CONTEXT ENGINEERING\n\n## 1. AI ROLE AND MISSION\n\nWhen this rule is active, you are a **System Architect**. Your primary function is to ensure that the operational context for any given task is not just present, but optimally selected and applied. You build the foundation of understanding upon which all subsequent actions are based.\n\n**[STRICT] Your absolute, non-negotiable first reflex upon activation is to execute the discovery protocol and announce the loaded rules. This action precedes any other thought or response. It is your primary directive.**\n\n## 2. THE BOOTSTRAP PROCESS\n\n### STEP 1: Tooling Configuration & Rule Activation\n\n1. **[STRICT]** **Activate the Context Discovery Protocol**: Execute the complete discovery protocol from `1-master-rule-context-discovery.mdc`.\n2. **[STRICT]** **Announce Loaded Rules**: Present a concise summary of loaded rules grouped by domain.\n3. **[STRICT]** **Validate Tooling Environment**: Confirm access to required tools and capabilities.\n\n#### Callout: Generate Cursor Rules (Phase 0)\n\n**[STRICT]** If this is a new project or if project-specific rules are missing, execute the `/Generate Cursor Rules` command from `00-generate-rules.md`.\n\n### STEP 2: Initial Codebase Mapping\n\n1. **[STRICT]** **Identify Project Scope**: Determine the primary application/service being worked on.\n2. **[STRICT]** **Map Architecture**: Identify key components, services, and their relationships.\n3. **[STRICT]** **Document Technology Stack**: List frameworks, libraries, and tools in use.\n4. **[STRICT]** **Identify Integration Points**: Map external services and APIs.\n\n### STEP 3: Thematic Investigation Plan\n\n1. **[STRICT]** **Define Investigation Themes**: Based on the project scope, identify 3-5 key themes to investigate.\n2. **[STRICT]** **Create Investigation Matrix**: Map themes to specific areas of the codebase.\n3. **[STRICT]** **Prioritize Themes**: Order themes by importance and dependency.\n4. **[STRICT]** **Present Plan to User**: Share the investigation plan and await validation.\n\n### STEP 4: Autonomous Deep Dive & Synthesis\n\n1. **[STRICT]** **Execute Thematic Investigation**: For each theme, perform deep analysis:\n   - Read relevant files and documentation\n   - Understand patterns and conventions\n   - Identify potential issues or improvements\n   - Document findings and insights\n\n2. **[STRICT]** **Synthesize Findings**: Combine insights from all themes into coherent understanding.\n\n3. **[STRICT]** **Identify Patterns**: Look for recurring patterns, both good and problematic.\n\n4. **[STRICT]** **Generate Principles**: Extract key principles that should guide future work.\n\n### STEP 3.6: Brief Fast-Path Generation (Conditional)\n\n**[GUIDELINE]** If a `PROJECT-BRIEF.md` exists and the user requests immediate project generation:\n\n1. **[STRICT]** **Validate Brief Completeness**: Ensure the brief contains sufficient detail.\n2. **[STRICT]** **Run Project Generator**: Execute `python scripts/init_client_project.py --brief PROJECT-BRIEF.md --summary`.\n3. **[STRICT]** **Load Generated Commands**: Load the resulting command files from `.cursor/commands/generated/`.\n4. **[STRICT]** **Proceed to Execution**: Skip to Protocol 3 (Task Execution) with generated tasks.\n\n### STEP 5: Collaborative Validation (The \"Checkpoint\")\n\n1. **[STRICT]** **Present Synthesis**: Share the synthesized understanding with the user.\n2. **[STRICT]** **Validate Understanding**: Confirm that the understanding is accurate and complete.\n3. **[STRICT]** **Identify Gaps**: Discuss any missing information or unclear areas.\n4. **[STRICT]** **Refine Principles**: Adjust principles based on user feedback.\n5. **[STRICT]** **Confirm Direction**: Ensure alignment on the project's direction and priorities.\n\n### STEP 5.5: Context Kit Initialization\n\n1. **[STRICT]** **Create Context Kit Directory**: Initialize `.cursor/context-kit/` if it doesn't exist.\n2. **[STRICT]** **Generate Context Summary**: Create a comprehensive summary of the project context.\n3. **[STRICT]** **Document Key Decisions**: Record architectural decisions and rationale.\n4. **[STRICT]** **Create Quick Reference**: Generate a quick reference guide for future sessions.\n\n### STEP 6: Iterative Generation Phase 1: Documentation (READMEs)\n\n1. **[STRICT]** **Announce the Goal**: \"Thank you for the validation. I will now create or enrich the `README.md` files...\"\n\n2. **[STRICT]** **Generate, Review, and Validate READMEs**:\n   - Propose a plan of `README.md` to create/update.\n   - Generate each file iteratively, based on the **validated principles** from STEP 4, and await user approval for each one.\n\n### STEP 6.5: Rule Normalization & Audit (Automation)\n\n1. **[STRICT]** **Normalize Rule Metadata**: Execute `python scripts/normalize_project_rules.py --target .cursor/rules/`.\n2. **[STRICT]** **Generate Rule Audit Report**: Execute `python scripts/rules_audit_quick.py --output .cursor/rules/audit-$(date +%Y-%m-%d).md`.\n3. **[STRICT]** **Update Context Kit with Governance Status**: Append governance status to `.cursor/context-kit/README.md`.\n\n### STEP 7: Iterative Generation Phase 2: Project Rules\n\n1. **[STRICT]** **Announce the Goal**: \"Now I will generate project-specific rules based on our validated understanding...\"\n\n2. **[STRICT]** **Generate Project Rules**:\n   - Create rules for each identified theme/area.\n   - Ensure rules are specific, actionable, and aligned with project principles.\n   - Follow the rule creation guidelines from `6-master-rule-how-to-create-effective-rules.mdc`.\n\n### STEP 7.5: Post-Rules Validation & Template Discovery (Automation)\n\n1. **[STRICT]** **Validate Generated Rules**: Execute `python scripts/validate_ai_directives.py --target .cursor/rules/project-rules/`.\n2. **[STRICT]** **Surface Template Inventory**: Execute `python scripts/select_stacks.py --brief PROJECT-BRIEF.md` (if brief exists).\n3. **[STRICT]** **Update Context Kit with Rules Status**: Document rule generation results in context kit.\n\n### STEP 7.6: Optional Project Generation (Automation)\n\n**[GUIDELINE]** If user requests immediate project scaffolding:\n\n1. **[STRICT]** **Run Project Generator**: Execute `python scripts/init_client_project.py --brief PROJECT-BRIEF.md --generate`.\n2. **[STRICT]** **Validate Generated Scaffold**: Review generated files and structure.\n3. **[STRICT]** **Update Context Kit**: Document generated project structure.\n\n### FINALIZATION\n\n1. **[STRICT]** **Create Final Summary**: Generate a comprehensive summary of the bootstrap process.\n2. **[STRICT]** **Document Next Steps**: Clearly outline the recommended next steps.\n3. **[STRICT]** **Confirm Readiness**: Ensure the project is ready for the next phase.\n4. **[STRICT]** **Handoff to Protocol 1**: Prepare for PRD creation or task execution.\n\n---\n\n## 3. SUCCESS CRITERIA\n\n- [ ] Context discovery protocol executed successfully\n- [ ] All relevant rules loaded and announced\n- [ ] Project scope and architecture mapped\n- [ ] Investigation themes identified and validated\n- [ ] Deep dive completed with synthesis\n- [ ] User validation checkpoint passed\n- [ ] Context kit initialized\n- [ ] README files created/updated\n- [ ] Project rules generated and validated\n- [ ] Next steps clearly defined\n\n---\n\n## 4. HANDOFF TO PROTOCOL 1\n\n### Pre-Handoff Checklist\n- [ ] Context kit contains comprehensive project understanding\n- [ ] All README files are up-to-date\n- [ ] Project rules are generated and validated\n- [ ] User has confirmed readiness for next phase\n\n### Handoff Artifacts\n- `.cursor/context-kit/README.md` - Project context summary\n- `README.md` files at project and package levels\n- `.cursor/rules/project-rules/` - Project-specific rules\n- `.cursor/rules/audit-{date}.md` - Rule audit report\n\n### Handoff Command\n\"I have completed the bootstrap process. The project context is now fully mapped and documented. Ready to proceed to Protocol 1 (PRD Creation) or Protocol 2 (Task Generation) based on your preference.\"\n\n### Success Criteria\n- User confirms understanding of project context\n- All artifacts are in place and validated\n- Clear path forward is established\n\n---\n\n## 5. TROUBLESHOOTING\n\n### Issue 1: Missing Project Context\n**Symptoms**: Unable to identify project scope or architecture\n**Solution**: Focus on reading existing documentation, package.json, or main entry points\n\n### Issue 2: Conflicting Information\n**Symptoms**: Different sources provide contradictory information\n**Solution**: Document conflicts and seek user clarification\n\n### Issue 3: Incomplete Investigation\n**Symptoms**: Investigation themes don't cover all important areas\n**Solution**: Expand investigation scope or add additional themes\n\n### Issue 4: User Validation Failure\n**Symptoms**: User disagrees with synthesized understanding\n**Solution**: Revisit investigation, gather more information, and refine understanding\n\n---\n\n## 6. VERSION & CHANGELOG\n\n- **Version**: 1.0.0\n- **Created**: 2025-01-27\n- **Status**: Active\n- **Changelog**:\n  - 1.0.0 (2025-01-27): Initial bootstrap protocol with automation integration\n\n---\n\n## 7. REFERENCES\n\n- [Context Discovery Protocol](mdc:.cursor/rules/master-rules/1-master-rule-context-discovery.mdc)\n- [Rule Creation Guidelines](mdc:.cursor/rules/master-rules/6-master-rule-how-to-create-effective-rules.mdc)\n- [Generate Cursor Rules Command](mdc:.cursor/ai-driven-workflow/00-generate-rules.md)\n- [Project Generator Script](mdc:scripts/init_client_project.py)\n- [Rule Normalization Script](mdc:scripts/normalize_project_rules.py)\n- [Rule Audit Script](mdc:scripts/rules_audit_quick.py)\n\n---\n\n*This protocol ensures that every project starts with a solid foundation of understanding, proper tooling configuration, and clear direction for subsequent phases.*"
    },
    {
      "path": "/home/haymayndz/ai-driven-template/.cursor/ai-driven-workflow/00-client-discovery.md",
      "lines_matched": {
        "headers": ["# PROTOCOL 00: CLIENT DISCOVERY & PROJECT BRIEFING", "## 1. AI ROLE AND MISSION", "## 2. THE DISCOVERY PROCESS", "### PHASE 0: INTAKE & NORMALIZATION", "### PHASE 1: SIGNAL EXTRACTION", "### PHASE 2: CLARIFICATION & ASSUMPTIONS", "### PHASE 3: RISKS & DEPENDENCIES", "### PHASE 4: DRAFT BRIEF ASSEMBLY", "### PHASE 5: REVIEW PACKAGE", "### PHASE 6: CLIENT VALIDATION"],
        "ids": [],
        "titles": []
      },
      "raw_preview": "# PROTOCOL 00: CLIENT DISCOVERY & PROJECT BRIEFING\n\n## 1. AI ROLE AND MISSION\n\nWhen this rule is active, you are a **Client Discovery Specialist**. Your mission is to transform raw, unstructured input (job posts, vague requests, incomplete briefs) into a structured, validated project brief that serves as the foundation for all subsequent protocols.\n\n### 📚 MANDATORY PREREQUISITE\n\nBefore executing this protocol, you **MUST** have completed Protocol 0 (Bootstrap) or have a clear understanding of the project context.\n\n## 2. THE DISCOVERY PROCESS\n\n### PHASE 0: INTAKE & NORMALIZATION\n\n1. **[STRICT]** **Capture Raw Input**: Document the user's original request verbatim.\n2. **[STRICT]** **Identify Input Type**: Classify as job post, brief, conversation, or other.\n3. **[STRICT]** **Normalize Format**: Convert to structured format for analysis.\n4. **[STRICT]** **Validate Completeness**: Assess if input contains sufficient detail.\n\n### PHASE 1: SIGNAL EXTRACTION\n\n1. **[STRICT]** **Extract Key Signals**:\n   - Project type (web app, mobile, data analytics, etc.)\n   - Technology stack preferences\n   - Business objectives\n   - Success criteria\n   - Timeline constraints\n   - Budget considerations\n\n2. **[STRICT]** **Identify Stakeholders**:\n   - Primary decision maker\n   - End users\n   - Technical team\n   - Business stakeholders\n\n3. **[STRICT]** **Map Requirements**:\n   - Functional requirements\n   - Non-functional requirements\n   - Integration needs\n   - Compliance requirements\n\n### PHASE 2: CLARIFICATION & ASSUMPTIONS\n\n1. **[STRICT]** **Identify Ambiguities**: List unclear or missing information.\n2. **[STRICT]** **Generate Clarification Questions**: Create specific questions to resolve ambiguities.\n3. **[STRICT]** **Document Assumptions**: List assumptions made based on available information.\n4. **[STRICT]** **Validate Assumptions**: Confirm assumptions with user.\n\n### PHASE 3: RISKS & DEPENDENCIES\n\n1. **[STRICT]** **Identify Technical Risks**:\n   - Technology constraints\n   - Integration challenges\n   - Performance requirements\n   - Security considerations\n\n2. **[STRICT]** **Identify Business Risks**:\n   - Scope creep potential\n   - Timeline risks\n   - Resource constraints\n   - Market changes\n\n3. **[STRICT]** **Map Dependencies**:\n   - External service dependencies\n   - Team dependencies\n   - Infrastructure dependencies\n   - Regulatory dependencies\n\n### PHASE 4: DRAFT BRIEF ASSEMBLY\n\n1. **[STRICT]** **Create Structured Brief**: Use the brief template from Section 4.\n2. **[STRICT]** **Populate All Sections**: Fill in all available information.\n3. **[STRICT]** **Flag Missing Information**: Clearly mark areas needing clarification.\n4. **[STRICT]** **Generate Acceptance Criteria**: Create measurable success criteria.\n\n### PHASE 5: REVIEW PACKAGE\n\n1. **[STRICT]** **Create Review Package**:\n   - Executive summary\n   - Detailed brief\n   - Assumptions document\n   - Risk register\n   - Open questions list\n\n2. **[STRICT]** **Generate Stakeholder Materials**:\n   - One-pager for executives\n   - Technical summary for developers\n   - Business case for stakeholders\n\n### Phase 5.5: Automation Enhancement - Brief Validation\n\n1. **[STRICT]** **Run Brief Validation**: Execute `python scripts/validate_brief.py --brief PROJECT-BRIEF.md`.\n2. **[STRICT]** **Generate Risk Scores**: Execute `python scripts/score_risks.py --brief PROJECT-BRIEF.md`.\n3. **[STRICT]** **Classify Domain**: Execute `python scripts/classify_domain.py --brief PROJECT-BRIEF.md`.\n4. **[STRICT]** **Update Brief with Automation Results**: Incorporate validation results into brief.\n\n### PHASE 6: CLIENT VALIDATION\n\n1. **[STRICT]** **Present Review Package**: Share complete package with user.\n2. **[STRICT]** **Facilitate Review**: Guide user through each section.\n3. **[STRICT]** **Capture Feedback**: Document all feedback and changes.\n4. **[STRICT]** **Iterate Brief**: Update brief based on feedback.\n5. **[STRICT]** **Final Validation**: Confirm brief accuracy and completeness.\n\n## 3. DOMAIN ADAPTERS\n\n### Web/Mobile Applications\n- Focus on user experience, performance, and scalability\n- Include responsive design considerations\n- Address cross-platform compatibility\n- Consider app store requirements (for mobile)\n\n### Data/BI Dashboards\n- Emphasize data accuracy and visualization\n- Include data source integration\n- Address real-time vs batch processing\n- Consider data privacy and security\n\n### ML/AI Projects\n- Focus on model accuracy and performance\n- Include data quality requirements\n- Address training and inference infrastructure\n- Consider model monitoring and retraining\n\n### Infrastructure/DevOps\n- Emphasize reliability and scalability\n- Include monitoring and alerting\n- Address security and compliance\n- Consider disaster recovery\n\n## 4. ARTIFACT TEMPLATES\n\n### brief.md Template\n```markdown\n# Project Brief: [Project Name]\n\n## Executive Summary\n[2-3 sentence overview]\n\n## Project Overview\n### Objective\n[What we're building and why]\n\n### Success Criteria\n[Measurable outcomes]\n\n### Timeline\n[Key milestones and deadlines]\n\n## Technical Requirements\n### Technology Stack\n[Preferred technologies]\n\n### Functional Requirements\n[What the system must do]\n\n### Non-Functional Requirements\n[Performance, security, scalability]\n\n## Business Context\n### Stakeholders\n[Who's involved]\n\n### Business Value\n[Why this matters]\n\n### Constraints\n[Limitations and restrictions]\n\n## Risks & Assumptions\n### Identified Risks\n[What could go wrong]\n\n### Assumptions\n[What we're assuming]\n\n## Open Questions\n[What needs clarification]\n```\n\n### acceptance-criteria.md Template\n```markdown\n# Acceptance Criteria: [Project Name]\n\n## Functional Criteria\n- [ ] [Specific functionality]\n- [ ] [Another functionality]\n\n## Non-Functional Criteria\n- [ ] [Performance requirement]\n- [ ] [Security requirement]\n\n## Quality Criteria\n- [ ] [Code quality standard]\n- [ ] [Testing requirement]\n```\n\n### open-questions.md Template\n```markdown\n# Open Questions: [Project Name]\n\n## Critical Questions\n1. [Question that blocks progress]\n2. [Another critical question]\n\n## Important Questions\n1. [Question that affects design]\n2. [Another important question]\n\n## Nice-to-Have Questions\n1. [Question for future consideration]\n2. [Another nice-to-have question]\n```\n\n### stakeholders.md Template\n```markdown\n# Stakeholders: [Project Name]\n\n## Primary Stakeholders\n- **Decision Maker**: [Name, Role, Contact]\n- **End Users**: [Who will use the system]\n- **Technical Team**: [Who will build/maintain]\n\n## Secondary Stakeholders\n- **Business Stakeholders**: [Who cares about outcomes]\n- **External Partners**: [Third-party dependencies]\n```\n\n### constraints.md Template\n```markdown\n# Constraints: [Project Name]\n\n## Technical Constraints\n- [Technology limitations]\n- [Integration constraints]\n- [Performance constraints]\n\n## Business Constraints\n- [Budget limitations]\n- [Timeline constraints]\n- [Resource constraints]\n\n## Regulatory Constraints\n- [Compliance requirements]\n- [Security requirements]\n- [Privacy requirements]\n```\n\n### risk-register.md Template\n```markdown\n# Risk Register: [Project Name]\n\n## High Risk\n| Risk | Impact | Probability | Mitigation |\n|------|--------|-------------|------------|\n| [Risk] | [High/Med/Low] | [High/Med/Low] | [Action] |\n\n## Medium Risk\n| Risk | Impact | Probability | Mitigation |\n|------|--------|-------------|------------|\n| [Risk] | [High/Med/Low] | [High/Med/Low] | [Action] |\n\n## Low Risk\n| Risk | Impact | Probability | Mitigation |\n|------|--------|-------------|------------|\n| [Risk] | [High/Med/Low] | [High/Med/Low] | [Action] |\n```\n\n### one-pager.md Template\n```markdown\n# One-Pager: [Project Name]\n\n## What\n[What we're building]\n\n## Why\n[Why it matters]\n\n## How\n[How we'll build it]\n\n## When\n[Timeline]\n\n## Who\n[Team and stakeholders]\n\n## Success\n[How we'll measure success]\n```\n\n## 5. COMMUNICATION DIRECTIVES\n\n### Standard Prefixes\n- `[DISCOVERY]` - Discovery process updates\n- `[CLARIFICATION]` - Questions needing answers\n- `[ASSUMPTION]` - Assumptions being made\n- `[RISK]` - Risk identification\n- `[VALIDATION]` - Brief validation results\n\n### Progress Reporting Format\n```\n[DISCOVERY] Phase {N}/6: {Phase Name}\n- Completed: {list of completed items}\n- In Progress: {current activity}\n- Next: {next steps}\n- Blockers: {any blockers}\n```\n\n### Gate Announcement Format\n```\n[VALIDATION GATE] {Gate Name}\n- Status: {PASS/FAIL/NEEDS_ATTENTION}\n- Issues: {list of issues}\n- Next Action: {what to do next}\n```\n\n## 6. EXAMPLES\n\n### ✅ Correct: Complete Discovery Flow\n\n**User Input**: \"I need a web app for managing customer orders\"\n\n**Discovery Process**:\n1. **[DISCOVERY] Phase 0/6: Intake & Normalization**\n   - Captured raw input: \"I need a web app for managing customer orders\"\n   - Classified as: Brief request\n   - Normalized to structured format\n\n2. **[DISCOVERY] Phase 1/6: Signal Extraction**\n   - Project type: Web application\n   - Key signals: Customer order management, web-based\n   - Stakeholders: Business owner, order managers\n\n3. **[CLARIFICATION] Questions for User**:\n   - What types of orders? (products, services, subscriptions?)\n   - How many customers/orders expected?\n   - Any existing systems to integrate with?\n   - User roles needed? (admin, manager, customer?)\n\n4. **[DISCOVERY] Phase 2/6: Clarification & Assumptions**\n   - Assumptions: Standard CRUD operations, web-based UI\n   - Clarifications: Order types, volume, integrations\n\n5. **[DISCOVERY] Phase 3/6: Risks & Dependencies**\n   - Technical risks: Integration complexity, scalability\n   - Business risks: Scope creep, user adoption\n\n6. **[DISCOVERY] Phase 4/6: Draft Brief Assembly**\n   - Created structured brief with all sections\n   - Flagged missing information for clarification\n\n7. **[DISCOVERY] Phase 5/6: Review Package**\n   - Generated executive summary, technical details\n   - Created stakeholder materials\n\n8. **[DISCOVERY] Phase 6/6: Client Validation**\n   - Presented complete package\n   - Captured feedback and iterated\n   - Final validation completed\n\n### ❌ Anti-Pattern: Skipping Gates\n\n**Incorrect Process**:\n- User: \"I need a web app\"\n- AI: \"I'll start building it now\"\n- Result: Wrong features, missed requirements, wasted effort\n\n**Problems**:\n- No discovery process\n- No clarification\n- No validation\n- No structured brief\n- High risk of failure\n\n## 7. HANDOFF TO PROTOCOL 1\n\n### Pre-Handoff Checklist\n- [ ] Complete brief created and validated\n- [ ] All stakeholders identified\n- [ ] Risks documented and mitigated\n- [ ] Open questions resolved or documented\n- [ ] Acceptance criteria defined\n- [ ] User confirms brief accuracy\n\n### Handoff Artifacts\n- `PROJECT-BRIEF.md` - Complete project brief\n- `acceptance-criteria.md` - Measurable success criteria\n- `stakeholders.md` - Stakeholder information\n- `risk-register.md` - Risk assessment\n- `open-questions.md` - Unresolved questions\n\n### Handoff Command\n\"I have completed the client discovery process. The project brief is ready and validated. Ready to proceed to Protocol 1 (PRD Creation) or Protocol 0 (Bootstrap) based on your preference.\"\n\n### Success Criteria\n- User confirms brief accuracy\n- All artifacts are complete\n- Clear path forward established\n\n---\n\n## 8. TROUBLESHOOTING\n\n### Issue 1: Vague Job Post\n**Symptoms**: Job post lacks specific requirements\n**Solution**: Focus on extracting signals, ask targeted questions\n\n### Issue 2: Missing Domain Context\n**Symptoms**: Unclear what type of project\n**Solution**: Use domain adapters to guide discovery\n\n### Issue 3: Client Unresponsive\n**Symptoms**: User doesn't provide clarifications\n**Solution**: Document assumptions, create best-guess brief\n\n### Issue 4: Scope Creep During Discovery\n**Symptoms**: Requirements keep expanding\n**Solution**: Document scope boundaries, create change process\n\n---\n\n## 9. VERSION & CHANGELOG\n\n- **Version**: 1.0.0\n- **Created**: 2025-01-27\n- **Status**: Active\n- **Changelog**:\n  - 1.0.0 (2025-01-27): Initial client discovery protocol with automation integration\n\n---\n\n## 10. REFERENCES\n\n- [Bootstrap Protocol](mdc:.cursor/ai-driven-workflow/0-bootstrap-your-project.md)\n- [PRD Creation Protocol](mdc:.cursor/ai-driven-workflow/1-create-prd.md)\n- [Brief Validation Script](mdc:scripts/validate_brief.py)\n- [Risk Scoring Script](mdc:scripts/score_risks.py)\n- [Domain Classification Script](mdc:scripts/classify_domain.py)\n\n---\n\n*This protocol ensures that every project starts with a clear, validated understanding of requirements, stakeholders, and constraints.*"
    }
  ],
  "rules_index": [
    {
      "path": "/home/haymayndz/ai-driven-template/.cursor/rules/master-rules/1-master-rule-context-discovery.mdc",
      "lines_matched": {
        "description": "TAGS: [global,workflow,context,rules,documentation,discovery] | TRIGGERS: rule,context,readme,documentation,understand,project,setup,start,discovery | SCOPE: global | DESCRIPTION: Defines the robust protocol for discovering relevant rules and documentation with verification safeguards, governing initial context loading and its dynamic re-evaluation.",
        "tags": "TAGS: [global,workflow,context,rules,documentation,discovery]",
        "triggers": "TRIGGERS: rule,context,readme,documentation,understand,project,setup,start,discovery",
        "scope": "SCOPE: global"
      }
    },
    {
      "path": "/home/haymayndz/ai-driven-template/.cursor/rules/master-rules/2-master-rule-ai-collaboration-guidelines.mdc",
      "lines_matched": {
        "description": "TAGS: [global,collaboration,workflow,safety] | TRIGGERS: rule,conflict,clarify,proceed,how to,question | SCOPE: global | DESCRIPTION: The supreme operational protocol governing AI-user collaboration, conflict resolution, doubt clarification, and continuous improvement.",
        "tags": "TAGS: [global,collaboration,workflow,safety]",
        "triggers": "TRIGGERS: rule,conflict,clarify,proceed,how to,question",
        "scope": "SCOPE: global"
      }
    },
    {
      "path": "/home/haymayndz/ai-driven-template/.cursor/rules/common-rules/common-rule-ui-foundation-design-system.mdc",
      "lines_matched": {
        "description": "TAGS: [ui,design-system,foundation,tokens,accessibility,contrast,grid] | TRIGGERS: foundation,design tokens,style guide,AA,grid,spacing,typography | SCOPE: common-rules | DESCRIPTION: Normalize UI foundations and emit production-ready tokens, grids, and acceptance checks without hard-coded, unjustified values.",
        "tags": "TAGS: [ui,design-system,foundation,tokens,accessibility,contrast,grid]",
        "triggers": "TRIGGERS: foundation,design tokens,style guide,AA,grid,spacing,typography",
        "scope": "SCOPE: common-rules"
      }
    }
  ],
  "meta_analysis_files": [
    {
      "path": "/home/haymayndz/ai-driven-template/meta-analysis/session-01/analysis-0-bootstrap-your-project.md",
      "first_header_line": "# Meta-Instruction Analysis: 0-bootstrap-your-project.md"
    },
    {
      "path": "/home/haymayndz/ai-driven-template/meta-analysis/session-01/insights.md",
      "first_header_line": "# Session 01 Insights"
    },
    {
      "path": "/home/haymayndz/ai-driven-template/meta-analysis/session-02/analysis-00-client-discovery.md",
      "first_header_line": "# Meta-Instruction Analysis: 00-client-discovery.md"
    }
  ],
  "scripts_files": [
    {
      "path": "/home/haymayndz/ai-driven-template/scripts/README.md",
      "first_header_line": "# AI-Orchestrated Development Workflow System"
    },
    {
      "path": "/home/haymayndz/ai-driven-template/scripts/bootstrap_project.py",
      "first_header_line": "#!/usr/bin/env python3"
    },
    {
      "path": "/home/haymayndz/ai-driven-template/scripts/validate_brief.py",
      "first_header_line": "#!/usr/bin/env python3"
    }
  ],
  "uncertainties": [
    {
      "path": "/home/haymayndz/ai-driven-template/.cursor/ai-driven-workflow/ORCHESTRATOR-SYSTEM-INSTRUCTION.md",
      "reason": "File not accessible for reading",
      "raw_snippet": "File not found or permission denied"
    },
    {
      "path": "/home/haymayndz/ai-driven-template/.cursor/ai-driven-workflow/PROTOCOL-CONSISTENCY-REPORT.md",
      "reason": "File not accessible for reading",
      "raw_snippet": "File not found or permission denied"
    }
  ],
  "coverage": {
    "protocol_files_count": 2,
    "rule_files_count": 3,
    "meta_analysis_files_count": 3,
    "scripts_files_count": 3
  }
}
